component embrayage < foundation.mechanical.rotational.branch
% Embrayage
% The block represents friction in the contact between rotating bodies.
% The friction force is simulated as a function of relative velocity and 
% assumed to be the sum of Stribeck, Coulomb. The
% sum of the Coulomb and Stribeck frictions at zero velocity is often 
% referred to as the breakaway friction.
%
% Connections R and C are mechanical rotational conserving ports. 
% The block positive direction is from port R to port C. This means that if 
% port R velocity is greater than that of port C, the block transmits 
% torque from port R to port C.

% Copyright 2005-2008 The MathWorks, Inc.

inputs
    coef = {1, '1'};                     % Coefficient d'embrayage
end

parameters
    brkwy_trq = { 25, 'N*m' };          % Breakaway friction torque
    Col_trq = { 20, 'N*m' };            % Coulomb friction torque
    trans_coef = { 10, 's/rad' };       % Transition approximation coefficient
    vel_thr = { 1e-4, 'rad/s' };        % Linear region velocity threshold
end

parameters (Access=private)
    brkwy_trq_th = { 24.995, 'N*m' };   % Breakaway torque at threshold velocity
end

function setup
    % Parameter range checking
    if brkwy_trq <= 0
        pm_error('simscape:GreaterThanZero','Breakaway friction torque' )
    end
    if Col_trq <= 0
        pm_error('simscape:GreaterThanZero','Coulomb friction torque' )
    end
    if Col_trq > brkwy_trq
        pm_error('simscape:LessThanOrEqual','Coulomb friction torque','Breakaway friction torque')
    end
    if trans_coef <= 0
        pm_error('simscape:GreaterThanZero','Transition approximation coefficient')
    end
    if vel_thr <= 0
        pm_error('simscape:GreaterThanZero','Linear region velocity threshold')
    end

    % Computing breakaway torque at threshold velocity
    brkwy_trq_th = Col_trq + (brkwy_trq - Col_trq) * ...
        exp(-trans_coef * vel_thr);
end

equations
    if (abs(w) <= vel_thr)
        % Linear region
        t == brkwy_trq_th * w / vel_thr * coef;
    elseif w > 0
        t == (Col_trq +  (brkwy_trq - Col_trq) * exp(-trans_coef * w))*coef;
    else
        t == (- Col_trq - (brkwy_trq - Col_trq) * exp(-trans_coef * abs(w)))*coef;
    end
end

end